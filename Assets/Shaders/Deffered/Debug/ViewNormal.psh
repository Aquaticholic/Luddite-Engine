// Texture2D<float4> g_SubpassInputColor;
// SamplerState      g_SubpassInputColor_sampler;

Texture2D<float4> g_SubpassInputNormal;
SamplerState      g_SubpassInputNormal_sampler;

Texture2D<float4> g_SubpassInputDepthZ;
SamplerState      g_SubpassInputDepthZ_sampler;

struct PSInput
{
    float4 Pos    : SV_POSITION;
};

struct PSOutput
{
    float4 Color : SV_TARGET0;
};

void main(in  PSInput  PSIn,
          out PSOutput PSOut)
{
    float Depth = g_SubpassInputDepthZ.Load(int3(PSIn.Pos.xy, 0)).x;
    if (Depth == 1.0)
        discard;

    // PSOut.Color.rgb = (g_SubpassInputNormal.Load(int3(PSIn.Pos.xy, 0)).rgb + 1.0f) * 0.5f;
    PSOut.Color.rgb = g_SubpassInputNormal.Load(int3(PSIn.Pos.xy, 0)).rgb;
    PSOut.Color.a = 1.0;
}
