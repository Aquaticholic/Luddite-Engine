Texture2D<float4> g_SubpassInputColor;
SamplerState      g_SubpassInputColor_sampler;

Texture2D<float4> g_SubpassInputNormal;
SamplerState      g_SubpassInputNormal_sampler;

Texture2D<float4> g_SubpassInputDepthZ;
SamplerState      g_SubpassInputDepthZ_sampler;

cbuffer ShaderConstants
{
    float g_AmbientPower;
};

struct PSInput
{
    float4 Pos    : SV_POSITION;
};

struct PSOutput
{
    float4 Color : SV_TARGET0;
};

void main(in  PSInput  PSIn,
          out PSOutput PSOut)
{
    float Depth = g_SubpassInputDepthZ.Load(int3(PSIn.Pos.xy, 0)).x;
    if (Depth == 1.0)
        discard;

    float3 normaldir = normalize((g_SubpassInputNormal.Load(int3(PSIn.Pos.xy, 0)).rgb * 2.0f) - 1.0f);
    float3 lightdir = normalize(float3(-2.0, 1.0, 1.0));
    float light = dot(normaldir, lightdir);
    light = clamp(light, 0.0, 1.0);

    PSOut.Color.rgb = g_SubpassInputColor.Load(int3(PSIn.Pos.xy, 0)).rgb * (g_AmbientPower + light);
    //  * 0.0;
    PSOut.Color.a = 1.0;
}
